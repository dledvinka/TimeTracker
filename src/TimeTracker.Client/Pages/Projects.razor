@page "/projects"

@inject IProjectService ProjectService
@inject NavigationManager NavigationManager

@implements IDisposable

<h1>Projects</h1>

<button class="btn btn-primary mb-2" @onclick="CreateProject">Create project</button>

<div>
    <QuickGrid Items="ProjectService.Projects.AsQueryable()" Pagination="@_paginationState">
        <PropertyColumn Property="arg => arg.Name" />
        <PropertyColumn Property="arg => arg.StartDate" Title="Start" />
        <PropertyColumn Property="arg => arg.EndDate" Title="End" />
        <PropertyColumn Property="arg => arg.TimeEntryCount" Title="Time entries" />
        <TemplateColumn>
            <button class="btn btn-primary" @onclick="() => EditProject(context.Id)">
                <i class="bi bi-pencil"></i>
            </button>
        </TemplateColumn>
    </QuickGrid>
    <Paginator State="_paginationState" />
</div>

@code {

    private readonly PaginationState _paginationState = new PaginationState()
        {
            ItemsPerPage = 10
        };

    protected override async Task OnInitializedAsync()
    {
        await ProjectService.LoadAllProjectsAsync();
        ProjectService.StateChanged += OnStateChanged;
    }

    private void OnStateChanged() => StateHasChanged();

    public void Dispose()
    {
        ProjectService.StateChanged -= OnStateChanged;
    }

    private void EditProject(int projectId)
    {
        NavigationManager.NavigateTo($"/project/{projectId}");
    }

    private void CreateProject()
    {
        NavigationManager.NavigateTo($"/project");
    }
}


