@page "/register"
@inject IAuthService AuthService;

<h3>Register</h3>

<EditForm Model="_newUser" OnValidSubmit="HandleSubmit">

    <DataAnnotationsValidator />

    <MyInputText Label="Name" Id="name" @bind-Value="_newUser.UserName" ValidationFor="() => _newUser.UserName" />
    <MyInputText Label="E-mail" Id="email" @bind-Value="_newUser.Email" ValidationFor="() => _newUser.Email" />
    <MyInputText Label="Password" Id="password" @bind-Value="_newUser.Password" ValidationFor="() => _newUser.Password" Type="password" />
    <MyInputText Label="Confirm password" Id="confirmPassword" @bind-Value="_newUser.ConfirmPassword" ValidationFor="() => _newUser.ConfirmPassword" Type="password" />
    <MyButton Type="submit" Text="Register" AddMarginTop="true" />

</EditForm>

@if (_registrationFailed)
{
    <div>
        @foreach (var error in _errors)
        {
            <MyErrorMessage Message="@error" />
        }
    </div>
}

@if (_registrationSuccessful)
{
    <div>
        @* TODO DL see how to make it work
        <MySuccessMessage> 
            Registration successful! You may <a href="login" class="underline">login</a> now.
        </MySuccessMessage> *@
        <MySuccessMessage Message="Registration successful!"></MySuccessMessage>
    </div>
}


@code {
    AccountRegistrationRequest _newUser = new AccountRegistrationRequest();

    bool _registrationFailed = false;
    bool _registrationSuccessful = true;

    List<string> _errors = new();

    private async Task HandleSubmit()
    {
        _registrationFailed = false;
        _registrationSuccessful = false;
        _errors.Clear();

        var response = await AuthService.Register(_newUser);
        _registrationSuccessful = response.IsSuccess;

        if (!response.IsSuccess && response.Errors != null)
        {
            _registrationFailed = true;
            _errors = response.Errors.ToList();
        }
        else if (!response.IsSuccess)
        {
            _registrationFailed = true;
            _errors.Add("An unexpected error occurred.");
        }
    }
}
