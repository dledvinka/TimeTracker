@inject ITimeEntryService TimeEntryService;
@inject IProjectService ProjectService;

@implements IDisposable

<div class="form-group">
    <InputSelect @bind-Value="_selectedProjectId" @oninput="OnInput" class="my-2 p-2 rounded-md border-gray-200 shadow-sm sm:text-sm">
        <option value="0">All projects</option>
        @foreach (var project in ProjectService.Projects)
        {
            <option value="@project.Id">@project.Name</option>
        }
    </InputSelect>

</div>

@code {
    private int _selectedProjectId;

    protected override void OnInitialized()
    {
        ProjectService.StateChanged += OnStateChanged;
    }

    private void OnStateChanged()
    {
        StateHasChanged();
    }

    private async Task OnInput(ChangeEventArgs e)
    {
        if (e.Value != null)
        {
            if (int.TryParse(e.Value.ToString(), out var projectId))
            {
                await TimeEntryService.GetTimeEntriesByProject(projectId);
            }
        }
    }

    public void Dispose()
    {
        ProjectService.StateChanged -= OnStateChanged;
    }

}
